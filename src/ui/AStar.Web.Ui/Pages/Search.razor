@page "/search"
@using AStar.Web.UI.Shared
@using AStar.Web.UI.Components
@using static AStar.Utilities.StringExtensions

<script src="js/backtotop.js"></script>
<LoadingIndicator @ref="loadingIndicator">
    <ChildContent>
        <button onclick="topFunction()" id="myBtn" title="Go to top">Back to Top</button>
    <Accordion>
        <AccordionItem @bind-Visible="@accordionItem1Visible" Background="Background.Primary">
            <AccordionHeader Background="Background.Primary">
                <Heading Size="HeadingSize.Is5">
                    <AccordionToggle>Search</AccordionToggle>
                </Heading>
            </AccordionHeader>
            <AccordionBody>
                <Row>
                    <Column ColumnSize="ColumnSize.Is12.OnDesktop">
                        <Card Margin="Margin.Is4.FromBottom">
                            <CardBody Background="Background.Primary">
                                <Fields>
                                    <Field Horizontal>
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is3.OnDesktop">
                                            Search Folder
                                        </FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is9.OnDesktop">
                                            <TextEdit Placeholder="Please specify the starting folder" @bind-text="@startingFolder" id="startingFolder" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal>
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is3.OnDesktop">
                                            Items Per Page
                                        </FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is9.OnDesktop">
                                            <NumericPicker @bind-Value="@itemsOrGroupsPerPage" ModifyValueOnWheel
                                                           WheelOn="NumericWheelOn.Hover" Step="5" Min="5" Max="50"
                                                           id="itemsPerPage" />
                                        </FieldBody>
                                    </Field>
                                </Fields>
                                <Fields>
                                    <Field Horizontal>
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is3.OnDesktop">
                                            Search Type
                                        </FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is9.OnDesktop">
                                            <Select @bind-SelectedValue="@searchType" id="searchType">
                                                <SelectItem Value="0">Images</SelectItem>
                                                <SelectItem Value="1">All</SelectItem>
                                            </Select>
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal>
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is3.OnDesktop">
                                            Sort Order
                                        </FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is9.OnDesktop">
                                            <Select @bind-SelectedValue="@sortOrder" id="sortOrder">
                                                <SelectItem Value="0">Size Descending</SelectItem>
                                                <SelectItem Value="1">Size Ascending</SelectItem>
                                                <SelectItem Value="2">Name Descending</SelectItem>
                                                <SelectItem Value="3">Name Ascending</SelectItem>
                                            </Select>
                                        </FieldBody>
                                    </Field>
                                </Fields>
                                <Fields>
                                    <Field Horizontal JustifyContent="JustifyContent.End">
                                        <FieldBody ColumnSize="ColumnSize.Is9.Is3.WithOffset">
                                            <Switch TValue="bool" @bind-Checked="@recursiveSearch">
                                                Recursive Search?
                                            </Switch>
                                            <Switch TValue="bool" @bind-Checked="@excludeViewed">
                                                Exclude Viewed within 7 Days?
                                            </Switch>
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal JustifyContent="JustifyContent.End">
                                        <FieldBody ColumnSize="ColumnSize.Is9.Is3.WithOffset">
                                            <Button Color="Color.Success" Clicked="StartSearch"
                                                    id="startSearch">
                                                Start Search
                                            </Button>
                                        </FieldBody>
                                    </Field>
                                </Fields>
                            </CardBody>
                        </Card>
                    </Column>
                </Row>
            </AccordionBody>
        </AccordionItem>
        <AccordionItem @bind-Visible="@accordionItem3Visible" Background="Background.Primary">
            <AccordionHeader>
                <Heading Size="HeadingSize.Is5">
                    <AccordionToggle>Search Results</AccordionToggle>
                </Heading>
            </AccordionHeader>
            <AccordionBody>
                <Row>
                    <Column ColumnSize="ColumnSize.Is10">
                    <Pagination Background="Background.Primary">
                        <PaginationItem Disabled="@IsPageNavigationDisabled(PREVIOUS)" @onclick="Previous">
                            <PaginationLink Background="Background.Warning">
                                <span aria-hidden="true">« Previous</span>
                            </PaginationLink>
                        </PaginationItem>
                        @{
                            foreach(var pageOrdinal in pagesForPagination)
                            {
                                var pageNumberAsString = pageOrdinal.ToString();
                                <PaginationItem @key="pageNumberAsString" Active="@IsActive(pageNumberAsString)">
                                        <PaginationLink Page="@pageNumberAsString" Clicked="SetActive" Background="Background.Warning">
                                        @pageNumberAsString
                                    </PaginationLink>
                                </PaginationItem>
                            }
                        }
                        <PaginationItem Disabled="@IsPageNavigationDisabled(NEXT)" @onclick="Next">
                                <PaginationLink Background="Background.Warning">
                                <span aria-hidden="true">Next »</span>
                            </PaginationLink>
                        </PaginationItem>
                        </Pagination>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is2">
                        <Select TValue="int" SelectedValue="@currentPageAsInt" SelectedValueChanged="@OnSelectedValueChanged">
                            @{
                                foreach(var pageNumber in pages)
                                {
                                    <SelectItem Selected="@(pageNumber == currentPageAsInt)" Value="@pageNumber.ToString()">Page @pageNumber.ToString()</SelectItem>
                                }
                            }
                        </Select>
                    </Column>
                </Row>
                <Row>
                    <CardDeck>
                    @foreach(var file in Files)
                    {
                        <Card Background="Background.Primary">
                            <CardBody>
                                <CardTitle Size="4">
                                        <div>@file.Name</div>
                                </CardTitle>
                                    <CardText>
                                            <ImageComponent ImageName="@file.Name" ImageFullName="@file.FullName" ImageSize="850"></ImageComponent>
                                            <br />
                                            <div><strong>Directory Name:</strong> @file.DirectoryName</div>
                                            <div><strong>File Name:</strong> @file.Name</div>
                                            <div><strong>Size:</strong> <span width="150pt" display: "inline-block;"> @file.SizeForDisplay</span><div><strong>Width x Height:</strong> @file.Width x @file.Height</div></div>
                                            <div>
                                                <FileAccessDetail FileId="@file.Id" FileNameWithPath="@file.FullName"></FileAccessDetail>
                                            </div>
                                </CardText>
                            </CardBody>
                        </Card>
                    }
                    </CardDeck>
                </Row>
                <Row>
                    <Column ColumnSize="ColumnSize.Is10">
                    <Pagination Background="Background.Primary">
                        <PaginationItem Disabled="@IsPageNavigationDisabled(PREVIOUS)" @onclick="Previous">
                            <PaginationLink Background="Background.Warning">
                                <span aria-hidden="true">« Previous</span>
                            </PaginationLink>
                        </PaginationItem>
                        @{
                            foreach(var pageOrdinal in pagesForPagination)
                            {
                                var pageNumberAsString = pageOrdinal.ToString();
                                <PaginationItem @key="pageNumberAsString" Active="@IsActive(pageNumberAsString)">
                                        <PaginationLink Page="@pageNumberAsString" Clicked="SetActive" Background="Background.Warning">
                                        @pageNumberAsString
                                    </PaginationLink>
                                </PaginationItem>
                            }
                        }
                        <PaginationItem Disabled="@IsPageNavigationDisabled(NEXT)" @onclick="Next">
                                <PaginationLink Background="Background.Warning">
                                <span aria-hidden="true">Next »</span>
                            </PaginationLink>
                        </PaginationItem>
                        </Pagination>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is2">
                        <Select TValue="int" SelectedValue="@currentPageAsInt" SelectedValueChanged="@OnSelectedValueChanged">
                            @{
                                foreach(var pageNumber in pages)
                                {
                                    <SelectItem Selected="@(pageNumber == currentPageAsInt)" Value="@pageNumber.ToString()">Page @pageNumber.ToString()</SelectItem>
                                }
                            }
                        </Select>
                    </Column>
                </Row>
            </AccordionBody>
        </AccordionItem>
        </Accordion>
    </ChildContent>
    <IndicatorTemplate>
        <Animate Animation="Animations.FadeDownRight">
            <Div>
                <SpinKit Type="SpinKitType.CircleFade" Size="100px" />
            </Div>
        </Animate>
    </IndicatorTemplate>
</LoadingIndicator>
