@page "/search-duplicates"
@using AStar.Web.UI.FilesApi
@using AStar.Web.UI.Shared
@using AStar.Web.UI.Components
@using static AStar.Utilities.StringExtensions

<LoadingIndicator @ref="loadingIndicator">
    <Accordion>
        <AccordionItem @bind-Visible="@accordionItem1Visible" Background="Background.Primary">
            <AccordionHeader Background="Background.Primary">
                <Heading Size="HeadingSize.Is5">
                    <AccordionToggle>Search</AccordionToggle>
                </Heading>
            </AccordionHeader>
            <AccordionBody>
                <Row>
                    <Column ColumnSize="ColumnSize.Is12.OnDesktop">
                        <Card Margin="Margin.Is4.FromBottom">
                            <CardBody Background="Background.Primary">
                                <Fields>
                                    <Field Horizontal>
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is3.OnDesktop">
                                            Search Folder
                                        </FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is9.OnDesktop">
                                            <TextEdit Placeholder="Please specify the starting folder"
                                                      @bind-text="@startingFolder" id="startingFolder" />
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal>
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is3.OnDesktop">
                                            Groups Per Page
                                        </FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.IsFull.OnTablet.Is9.OnDesktop">
                                            <NumericPicker @bind-Value="@groupsPerPage" ModifyValueOnWheel
                                                           WheelOn="NumericWheelOn.Hover" Step="10" Min="10" Max="50"
                                                           id="itemsPerPage" />
                                        </FieldBody>
                                    </Field>
                                </Fields>
                                <Fields>
                                    <Field Horizontal>
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is3.OnDesktop">
                                            Sort Order
                                        </FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.Is6.OnTablet.Is9.OnDesktop">
                                            <Select @bind-SelectedValue="@sortOrder" id="sortOrder">
                                                <SelectItem Value="0">Size Descending</SelectItem>
                                                <SelectItem Value="1">Size Ascending</SelectItem>
                                                <SelectItem Value="2">Name Descending</SelectItem>
                                                <SelectItem Value="3">Name Ascending</SelectItem>
                                            </Select>
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal>
                                        <FieldLabel ColumnSize="ColumnSize.IsFull.OnTablet.Is3.OnDesktop">
                                        </FieldLabel>
                                        <FieldBody ColumnSize="ColumnSize.Is6.OnTablet.Is9.OnDesktop">
                                        </FieldBody>
                                    </Field>
                                </Fields>
                                <Fields>
                                    <Field Horizontal JustifyContent="JustifyContent.End">
                                        <FieldBody ColumnSize="ColumnSize.Is9.Is3.WithOffset">
                                            <Switch TValue="bool" @bind-Checked="@recursiveSearch">
                                                Recursive Search?
                                            </Switch>
                                        </FieldBody>
                                    </Field>
                                    <Field Horizontal JustifyContent="JustifyContent.End">
                                        <FieldBody ColumnSize="ColumnSize.Is9.Is3.WithOffset">
                                            <Button Color="Color.Success" Clicked="StartSearch"
                                                    id="startSearch">
                                                Submit
                                            </Button>
                                        </FieldBody>
                                    </Field>
                                </Fields>
                            </CardBody>
                        </Card>
                    </Column>
                </Row>
            </AccordionBody>
        </AccordionItem>
        <AccordionItem @bind-Visible="@accordionItem3Visible" Background="Background.Primary">
            <AccordionHeader>
                <Heading Size="HeadingSize.Is5">
                    <AccordionToggle>Search Results</AccordionToggle>
                </Heading>
            </AccordionHeader>
            <AccordionBody>
                <Row>
                    <Column ColumnSize="ColumnSize.Is8">
                        <Pagination Background="Background.Primary">
                            <PaginationItem Disabled="@IsPageNavigationDisabled(PREVIOUS)" @onclick="Previous">
                                <PaginationLink Background="Background.Success">
                                    <span aria-hidden="true">« Previous</span>
                                </PaginationLink>
                            </PaginationItem>
                            @{
                                foreach(var pageOrdinal in pagesForPagination)
                                {
                                    var pageNumberAsString = pageOrdinal.ToString();
                                    <PaginationItem @key="pageNumberAsString" Active="@IsActive(pageNumberAsString)">
                                        <PaginationLink Page="@pageNumberAsString" Clicked="SetActive" Background="Background.Success">
                                            @pageNumberAsString
                                        </PaginationLink>
                                    </PaginationItem>
                                }
                            }
                            <PaginationItem Disabled="@IsPageNavigationDisabled(NEXT)" @onclick="Next">
                                <PaginationLink Background="Background.Success">
                                    <span aria-hidden="true">Next »</span>
                                </PaginationLink>
                            </PaginationItem>
                        </Pagination>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is2">
                        <Select TValue="int" SelectedValue="@currentPageAsInt" SelectedValueChanged="@OnSelectedValueChanged">
                            @{
                                foreach(var pageNumber in pages)
                                {
                                    <SelectItem Selected="@(pageNumber == currentPageAsInt)" Value="@pageNumber.ToString()">Page @pageNumber.ToString()</SelectItem>
                                }
                            }
                        </Select>
                    </Column>                        
                </Row>
                <Row>
                    @foreach(var fileGroup in FileGroups)
                    {
                        var imageDivClass = "imageDiv";
                        <table>
                            <thead>
                                <th>
                                <h2 class="centre"><br />Duplicate Group Details<br />Size: @fileGroup.Group.FileSizeForDisplay, Width: @fileGroup.Group.Width, Height: @fileGroup.Group.Height</h2>
                                </th>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>
                                        @foreach(var file in fileGroup.Files)
                                        {
                                            <div class="@imageDivClass">
                                            <h4>@file.Name</h4>
                                            <br />
                                                <ImageComponent ImageName="@file.Name" ImageFullName="@file.FullName" ImageSize="850"></ImageComponent>
                                                <br />
                                                <div>@file.FullName</div>
                                                <div>Size: @file.SizeForDisplay</div>
                                                <div>W x H: @file.Width x @file.Height</div>
                                                @if(!file.DeletePending)
                                                {
                                                    <div><Button Clicked="@(()=>MarkForDeletion(file.FullName))" Color="Color.Danger">Delete</Button></div>
                                                }
                                                else
                                                {
                                                    <Field Background="Background.Success" Border="Border.Is1.Rounded">
                                                        <FieldLabel> @DeletionStatus</FieldLabel>
                                                        <FieldBody ColumnSize="ColumnSize.Is4">
                                                            <Button Clicked="@(()=>UndoMarkForDeletion(file.FullName))" Color="Color.Info">Undo</Button>
                                                        </FieldBody>
                                                    </Field>
                                                }
                                            </div>

                                            imageDivClass = "imageDiv2";
                                        }
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    }
                </Row>
                <Row>
                    <Column ColumnSize="ColumnSize.Is8">
                        <Pagination Background="Background.Primary">
                            <PaginationItem Disabled="@IsPageNavigationDisabled(PREVIOUS)" @onclick="Previous">
                                <PaginationLink Background="Background.Success">
                                    <span aria-hidden="true">« Previous</span>
                                </PaginationLink>
                            </PaginationItem>
                            @{
                                foreach(var pageOrdinal in pagesForPagination)
                                {
                                    var pageNumberAsString = pageOrdinal.ToString();
                                    <PaginationItem @key="pageNumberAsString" Active="@IsActive(pageNumberAsString)">
                                        <PaginationLink Page="@pageNumberAsString" Clicked="SetActive" Background="Background.Success">
                                            @pageNumberAsString
                                        </PaginationLink>
                                    </PaginationItem>
                                }
                            }
                            <PaginationItem Disabled="@IsPageNavigationDisabled(NEXT)" @onclick="Next">
                                <PaginationLink Background="Background.Success">
                                    <span aria-hidden="true">Next »</span>
                                </PaginationLink>
                            </PaginationItem>
                        </Pagination>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is2">
                        <Select TValue="int" SelectedValue="@currentPageAsInt" SelectedValueChanged="@OnSelectedValueChanged">
                            @{
                                foreach(var pageNumber in pages)
                                {
                                    <SelectItem Selected="@(pageNumber == currentPageAsInt)" Value="@pageNumber.ToString()">Page @pageNumber.ToString()</SelectItem>
                                }
                            }
                        </Select>
                    </Column>     
                </Row>
            </AccordionBody>
        </AccordionItem>
    </Accordion>
</LoadingIndicator>
